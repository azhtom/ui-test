// Generated by CoffeeScript 1.10.0
(function() {
  var contactForm, ratingWidget;

  ratingWidget = (function() {
    var catchDom, defaults, dom, events, initialize, st, suscribeEvents;
    dom = {};
    st = {};
    defaults = {
      body: 'body, html',
      stars: '#rating #stars',
      counter: "#rating .counter"
    };
    catchDom = function(st) {
      dom.body = $(st.body);
      dom.stars = $(st.stars);
      dom.counter = $(st.counter);
    };
    suscribeEvents = function() {
      dom.stars.rateYo('option', 'onChange', events.onChange);
    };
    events = {
      initPlugin: function() {
        dom.stars.rateYo({
          halfStar: true,
          spacing: "10px",
          normalFill: "#EAEAEA",
          starWidth: "40px"
        });
      },
      onChange: function(rating, rateYoInstance) {
        var posleft, rating_tool_tip;
        rating_tool_tip = null;
        if (rating > 0) {
          $(this).prev().find('.counter').text(rating);
          $(this).prev().find('.counter').show();
          posleft = 0;
          if (rating > 4) {
            posleft = 199;
          } else if (rating > 3) {
            posleft = 149;
          } else if (rating > 2) {
            posleft = 99;
          } else if (rating > 1) {
            posleft = 49;
          }
          clearTimeout(rating_tool_tip);
          $(this).prev().find('.counter').css({
            left: posleft + 'px'
          });
          return rating_tool_tip = setTimeout(function() {
            return dom.counter.fadeOut();
          }, 2500);
        }
      }
    };
    initialize = function(opts) {
      st = $.extend({}, defaults, opts);
      catchDom(st);
      events.initPlugin();
      return suscribeEvents();
    };
    return {
      init: initialize
    };
  })();

  ratingWidget.init();

  contactForm = (function() {
    var catchDom, defaults, dom, events, initialize, st, suscribeEvents;
    dom = {};
    st = {};
    defaults = {
      body: 'body, html',
      form: '.contact-form',
      filebox: '.contact-form #fdrag',
      fileinput: '.contact-form input[type=file]',
      filelist: '.contact-form .upload-box .file-list'
    };
    catchDom = function(st) {
      dom.body = $(st.body);
      dom.form = $(st.form);
      dom.filebox = $(st.filebox);
      dom.fileinput = $(st.fileinput);
      dom.filelist = $(st.filelist);
    };
    suscribeEvents = function() {
      dom.form.on('keyup', 'textarea', events.counterDescription);
      dom.filebox.on('click', events.openFileInput);
      dom.filebox.bind('dragover', events.fileDragHover);
      dom.filebox.bind('dragleave', events.fileDragLeave);
      dom.filebox.bind('drop', events.fileSelectHandler);
      dom.fileinput.on('change', events.fileSelectHandler);
    };
    events = {
      initValidation: function() {
        return dom.form.validate({
          errorElement: 'p',
          errorPlacement: events.errorPlacement,
          onfocusout: events.onfocusOut,
          rules: {
            email: {
              required: true,
              email: true
            },
            name: {
              required: true
            },
            subject: {
              required: true
            },
            description: {
              required: true
            },
            team: {
              required: true
            }
          }
        });
      },
      onfocusOut: function(element) {
        if (this.element(element)) {
          $(element).parent().parent().removeClass('input-field-error');
          return $(element).parent().parent().find('.error-box').fadeOut('fast');
        }
      },
      errorPlacement: function(error, element) {
        $(element).parent().parent().addClass('input-field-error');
        return $(element).parent().parent().find('.error-box').fadeIn('slow');
      },
      submitHandler: function() {
        return console.log('submit');
      },
      counterDescription: function() {
        var total;
        total = 300 - $(this).val().length;
        if (total >= 0) {
          return $(this).parent().find('.counter').text("Faltan " + total + " caracteres");
        } else {
          return $(this).val($(this).val().substring(0, 300));
        }
      },
      fileDragHover: function(e) {
        e.stopPropagation();
        e.preventDefault();
        return $(this).addClass('dghover');
      },
      fileDragLeave: function(e) {
        e.stopPropagation();
        e.preventDefault();
        return $(this).removeClass('dghover');
      },
      fileSelectHandler: function(e) {
        var file, files, i, len, results;
        e.stopPropagation();
        e.preventDefault();
        files = e.target.files || (e.originalEvent.dataTransfer && e.originalEvent.dataTransfer.files);
        results = [];
        for (i = 0, len = files.length; i < len; i++) {
          file = files[i];
          results.push($('<li/>', {
            text: file.name
          }).appendTo(dom.filelist));
        }
        return results;
      },
      openFileInput: function() {
        return $(dom.fileinput).click();
      }
    };
    initialize = function(opts) {
      st = $.extend({}, defaults, opts);
      catchDom(st);
      events.initValidation();
      return suscribeEvents();
    };
    return {
      init: initialize
    };
  })();

  contactForm.init();

}).call(this);
